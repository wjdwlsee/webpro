 (1) View는 행과 컬럼으로 구성된 가상 테이블이고 이미 존재하고 있는 테이블에 제한적으로 접근하도록 하기 위함이다.
물리적인 저장공간과 데이터를 가지지 않고 다른 테이블이나 뷰에서 파생된 논리적이 테이블이고 기본데이블의 데이터가 변경되면 뷰에도 반영된다.
 장점은 뷰를 이용한 기본 테이블의 액세스 제한을 통한 데이터에 대한 보안 기능 제공하고 여러 개의 기본 테이블로 정의된 뷰가 하나의 테이블인 것처럼 인식하며 기본테이블에 대한 복잡한 형태의 질의를 뷰로 정의하여 간단하게 표현 가능하다.
View의 종류에는 단순뷰 (하나의 테이블로 구성한 뷰)와 복합뷰(하나 이상의 기본 테이블로 구성한 뷰) 가 있으며 INSERT, DELETE, UPDATE와 같은 DML 명령문을 실행하여 기본 테이블의 데이터 조작 가능한 단순뷰와 
DML문을 제한적으로 사용하는 복합뷰의 차이점이 있다.
View의 제한 조건에는 테이블에 NOT NULL로 만든 컬럼들이 뷰에 다 포함되어 있어야 되고 ,WITH READ ONLY옵션을 설정한 뷰는 갱신 불가,WITH CHECK OPTION을 설정한 뷰는 뷰의 조건에 해당되는 데이터만 삽입, 삭제, 수정을 할 수 있다.
VIEW가 그룹함수, GROUP BY 절, DISTINCT 키워드를 포함한다면 행을 제거하거나 수정하거나 추가할 수 없다
INLINE VIEW SQL문장 내의 서브쿼리는 SELECT 절에도, FROM절에도 WHERE절에도 어디든 사용 가능하고 FROM 절 상의 서브쿼리를 inline view라 하며, FROM 절에 오는 서브쿼리는 VIEW 처럼 작용한다.
수정을 하기 위해서는 CREATE OR REPLACE VIEW 명령문을 이용한다
TOP-N 구문은 컬럼의 값 중 N개의 가장 큰 값 또는 작은 값을 기준으로 질의하는 것으로 사용 방법은 데이터를 정렬하는 질의를 서브쿼리나 inline 뷰로 생성, 필수요소에는 Rownum (row 순서를 나타내는 가상컬럼)있다.
 (2)인덱스를 사용하는 이유는 빠른 검색을 위해서 사용한다.
인덱스의 장점은 검색 속도가 빨라지며 시스템에 걸리는 부하를 줄여서 시스템 전체 성능을 향상시킨다.
인덱스의 단점은 인덱스를 위한 추가적인 공간이 필요하고 생성하는데 시간이 걸리며 데이터의 변경 작업(insert/update/delete)이 자주 일어날 경우에는 오히려 성능이 저하된다.
인덱스 생성 기본 형식 : create index_name on table_name (column_name);
