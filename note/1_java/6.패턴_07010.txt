 패턴(디자인 패턴)이란 객체지향 언어의 장점들을 모아객체지향 언어의 상속, 인터페이스, 추상화 등의 기능을 이용해서  가장 효율적으로 개발을 할 수 있게 만들어 놓은 프레임다.
싱글톤 패턴(Singleton pattern)이란 어떤 클래스의 객체는 오직 하나인 유일한 객체를 만들어 여러가지 상황에서 동일한 객체에 접근하기 위해 만들어진 패턴이다
또, 생성자가 여러 차례 호출되더라도 실제로 생성되는 객체는 하나이고 이 객체에 접근할 수 있는 전역적인 접촉점을 제공하는 패턴이다.
스트레티지 패턴(Strategy Pattern) 은 기능 하나를 정의하고 각각을 캡슐화하여 교환해서 사용할 수 있도록 만든다.
스트래티지를 활용하면 기능(알고리즘)을 사용하는 클라이언트와는 독립적으로 기능(알고리즘)을 변경할 수 있다.
쉽게 말하면, 어떤 객체를 만들 때 객체가 가지는 기능들이 다양하게 존재할 것이며 이러한 기능들을 추상화하여 언제든지 적용할 수 있게 만드는 것입니다. 즉 기능을 부품화, 표준화 하는 것이다.