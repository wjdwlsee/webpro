 객체는 관련성 있는 데이터와 메소드가 함께 있는 구성체이다.
 자동차 라는 객체를 예를 들면 자동차에는 색상, 배기량, 브렌드, 속도 등의 데이터(속성)가 있고 드라이브. 주차. 레이싱이라는 메소드가 있다.
현실 세계나 추상적이 내용의 속성과 동작을 추려내어 소프트웨어 객체의 필드와 메서드로 정의해 나가는 과정을 '객체 모델링' 이라고 한다.
 객체의 설계도라고 할수있는 클래스를 만들고 객체를 생성하며 클래스제작 방식은 다음과 같다
1. 패키지명
2 .클래스명
3 .데이터(인스턴스 변수=멤버변수, 필드) : 이 데이터는 생성자나 setter를 이용해서 초기화하지 않으면 객체는 null, 숫자는 0, boolean은 false로 초기화되어 들어간다
4 .생성자함수 : 클래스명과 똑같이 리턴타입이 없는 메소드를 생성자라 하며 처음 클래스형 객체를 만들때 호출된다. 모든 클래스는 반드시 하나 이상의 생성자가 있어야 한다. 
만약 하나도 없으면 JVM이 디폴트 생성자를 만들어 준다(new 연산자로 호출되는 메서드)
5. 메소드
6. Getter & setter
1 접근제한이란 클래스의 데이터나 메소드에 대해서 다른 클래스로부터 접근을 제한하는 것.
    public : 접근을 제한하지 않는다. 다른 모든 클래스에서 사용 가능
    protected : 해당 클래스와 동일한 패키지에 있거나 상속받은 클래스일 경우에만 사용 가능
    default : 접근제어자를 명시하지 않은 경우의 디폴드 접근제어자. 같은 패키지내의 클래스들은 
public 권한을 갖고 접근가능
    private : 해당 클래스만이 이 멤버를 사용할 수 있다. 외부객체에서는 접근 불가
2 static : 클래스변수(=static 변수) 란 객체변수(객체속성)는 객체가 생성될 때마다 각 객체 안의 속성 변수들이 생성되지만, 
	   클래스 변수는 클래스로부터 생성된 객체들의 수와 상관없이 하나만 생성된다.
	   한 클래스로부터 생성된 모든 객체들은 클래스 변수를 공유 하며 클래스 변수를 이용하여 객체들 사이의 통신에 사용하거나 객체들의 공통속성을 나타낼 수 있다.
	   객체변수와 달리 클래스 변수(static 변수)는 클래스 이름을 통하여 접근한다.
 static은 객체들끼리 공유하고 싶은 정보가 있을 때 사용하며 필요에 의해 클래스를 만들고, 사용할 때는 new 연산자를 통해 객체로 만들어서 사용을 한다.
